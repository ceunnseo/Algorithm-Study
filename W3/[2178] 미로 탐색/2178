// [2178] 언어 : C++, 메모리(KB) : 2156 , 시간(ms) : 0 

#include <bits/stdc++.h>
using namespace std;

#define X first
#define Y second

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    string board[101]; // 그냥 하나의 문자열로 입력 받아서 추가적인 인덱스로 문자열 내에서 재접근
    int dist[101][101];
    int n, m;

    int dx[4] = { 1, 0, -1, 0 };
    int dy[4] = { 0, 1, 0, -1 };

    cin >> n >> m;

    for (int i = 0; i < n; i++)
        cin >> board[i];

    for (int i = 0; i < n; i++)
        fill(dist[i], dist[i] + m, -1); // -1로 설정시 visit 불필요

    queue<pair<int, int>> q;
    q.push({ 0, 0 });
    dist[0][0] = 0;

    while (!q.empty()) {
        auto cur = q.front(); // 변수 알아서 지정
        q.pop();
        for (int dir = 0; dir < 4; dir++) {
            int nx = cur.X + dx[dir];
            int ny = cur.Y + dy[dir];
            if (nx < 0 || nx >= n || ny < 0 || ny >= m) continue; // 범위 벗어남
            if (dist[nx][ny] >= 0 || board[nx][ny] != '1') continue; // 이미 접근한 상태
            dist[nx][ny] = dist[cur.X][cur.Y] + 1;
            q.push({ nx, ny });
        }
    }
    cout << dist[n - 1][m - 1] + 1;
}
