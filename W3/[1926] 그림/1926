// 언어 : C++, 메모리 : 3860KB, 시간 : 32ms
#include <bits/stdc++.h>
using namespace std;

#define X first
#define Y second

int main() {
	ios::sync_with_stdio(0);
	cin.tie(0);

	int board[501][501] = { 0 };
	int visit[501][501] = { 0 };
	int n, m;
	int dx[4] = { 1,0,-1,0 };
	int dy[4] = { 0,1,0,-1 };
	int num = 0; // 그림의 개수
	int Max_size = 0; // 최대 그림 넓이

	cin >> n >> m;

	for (int i = 0; i < n; i++)
		for (int j = 0; j < m ;j++)
			cin >> board[i][j];

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (board[i][j] == 1 && visit[i][j] == 0) {
				num++;
				queue<pair<int, int>> q;
				q.push({ i,j });
				int size = 1; // 그림의 현재 넓이 , 1로 시작 해야함
				visit[i][j] = 1;
				while (!q.empty()) {
					pair<int, int> cur = q.front();
					q.pop();
					for (int dir = 0; dir < 4; dir++) {
						int nx = cur.X + dx[dir];
						int ny = cur.Y + dy[dir];
						if (nx < 0 || nx >= n || ny <0 || ny >= m) continue;
						if (visit[nx][ny] || board[nx][ny] != 1) continue;
						size++;
						visit[nx][ny] = 1;
						q.push({ nx,ny });
					}
				}
				Max_size = max(size, Max_size);
			}
		}
	}
	cout << num << '\n' << Max_size;
}
